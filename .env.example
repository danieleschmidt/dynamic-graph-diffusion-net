# =============================================================================
# Dynamic Graph Diffusion Network (DGDN) - Environment Variables
# =============================================================================

# -----------------------------------------------------------------------------
# Core Configuration
# -----------------------------------------------------------------------------

# Environment (development, testing, production)
DGDN_ENV=development

# Random seed for reproducibility
DGDN_SEED=42

# Device configuration (cpu, cuda, auto)
DGDN_DEVICE=auto

# Number of workers for data loading
DGDN_NUM_WORKERS=4

# -----------------------------------------------------------------------------
# Data Configuration
# -----------------------------------------------------------------------------

# Data directory path
DGDN_DATA_DIR=./data

# Dataset cache directory
DGDN_CACHE_DIR=./.cache

# Maximum dataset size in memory (bytes)
DGDN_MAX_DATASET_SIZE=1073741824  # 1GB

# Enable data preprocessing caching
DGDN_CACHE_PREPROCESSING=true

# -----------------------------------------------------------------------------
# Model Configuration
# -----------------------------------------------------------------------------

# Model checkpoints directory
DGDN_MODELS_DIR=./models

# Default model configuration
DGDN_HIDDEN_DIM=256
DGDN_NUM_LAYERS=3
DGDN_DIFFUSION_STEPS=5
DGDN_ATTENTION_HEADS=8

# Training configuration
DGDN_BATCH_SIZE=1024
DGDN_LEARNING_RATE=0.001
DGDN_MAX_EPOCHS=100

# -----------------------------------------------------------------------------
# Logging Configuration
# -----------------------------------------------------------------------------

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
DGDN_LOG_LEVEL=INFO

# Log directory
DGDN_LOG_DIR=./logs

# Enable structured logging (JSON format)
DGDN_STRUCTURED_LOGGING=false

# Log rotation settings
DGDN_LOG_MAX_SIZE=10485760  # 10MB
DGDN_LOG_BACKUP_COUNT=5

# -----------------------------------------------------------------------------
# Monitoring & Observability
# -----------------------------------------------------------------------------

# Enable metrics collection
DGDN_ENABLE_METRICS=true

# Metrics export format (prometheus, json, csv)
DGDN_METRICS_FORMAT=prometheus

# Metrics export port
DGDN_METRICS_PORT=9090

# Enable profiling
DGDN_ENABLE_PROFILING=false

# TensorBoard log directory
DGDN_TENSORBOARD_DIR=./logs/tensorboard

# -----------------------------------------------------------------------------
# Performance Configuration
# -----------------------------------------------------------------------------

# Enable mixed precision training
DGDN_MIXED_PRECISION=true

# Enable gradient checkpointing for memory efficiency
DGDN_GRADIENT_CHECKPOINTING=false

# Gradient clipping max norm
DGDN_GRAD_CLIP_NORM=1.0

# Enable compilation (requires PyTorch 2.0+)
DGDN_COMPILE_MODEL=false

# -----------------------------------------------------------------------------
# Distributed Training
# -----------------------------------------------------------------------------

# Master address for distributed training
DGDN_MASTER_ADDR=localhost

# Master port for distributed training
DGDN_MASTER_PORT=29500

# World size (number of processes)
DGDN_WORLD_SIZE=1

# Local rank
DGDN_LOCAL_RANK=0

# Backend for distributed training (nccl, gloo, mpi)
DGDN_DIST_BACKEND=nccl

# -----------------------------------------------------------------------------
# Security Configuration
# -----------------------------------------------------------------------------

# API keys and secrets (use secure storage in production)
# DGDN_API_KEY=your_api_key_here
# DGDN_SECRET_KEY=your_secret_key_here

# Enable secure connections
DGDN_SECURE_MODE=false

# Allowed hosts for serving (comma-separated)
DGDN_ALLOWED_HOSTS=localhost,127.0.0.1

# -----------------------------------------------------------------------------
# External Services
# -----------------------------------------------------------------------------

# Weights & Biases configuration
# WANDB_PROJECT=dgdn-experiments
# WANDB_ENTITY=your_wandb_entity
# WANDB_API_KEY=your_wandb_api_key

# MLflow configuration
# MLFLOW_TRACKING_URI=http://localhost:5000
# MLFLOW_EXPERIMENT_NAME=dgdn-experiments

# Neptune configuration
# NEPTUNE_PROJECT=your_project/dgdn
# NEPTUNE_API_TOKEN=your_neptune_token

# -----------------------------------------------------------------------------
# Database Configuration (if applicable)
# -----------------------------------------------------------------------------

# Database URL for metadata storage
# DGDN_DATABASE_URL=sqlite:///dgdn.db

# Redis URL for caching
# DGDN_REDIS_URL=redis://localhost:6379/0

# -----------------------------------------------------------------------------
# Cloud Storage Configuration
# -----------------------------------------------------------------------------

# AWS S3 configuration
# AWS_ACCESS_KEY_ID=your_access_key
# AWS_SECRET_ACCESS_KEY=your_secret_key
# AWS_DEFAULT_REGION=us-east-1
# DGDN_S3_BUCKET=your-dgdn-bucket

# Google Cloud Storage configuration
# GOOGLE_APPLICATION_CREDENTIALS=/path/to/credentials.json
# DGDN_GCS_BUCKET=your-dgdn-bucket

# Azure Blob Storage configuration
# AZURE_STORAGE_CONNECTION_STRING=your_connection_string
# DGDN_AZURE_CONTAINER=your-dgdn-container

# -----------------------------------------------------------------------------
# Development & Testing
# -----------------------------------------------------------------------------

# Enable debug mode
DGDN_DEBUG=false

# Enable verbose output
DGDN_VERBOSE=false

# Test configuration
DGDN_TEST_DATA_DIR=./tests/data
DGDN_TEST_TIMEOUT=300

# Benchmarking configuration
DGDN_BENCHMARK_RUNS=5
DGDN_BENCHMARK_WARMUP=2

# -----------------------------------------------------------------------------
# Production Deployment
# -----------------------------------------------------------------------------

# Server configuration
DGDN_HOST=0.0.0.0
DGDN_PORT=8000

# Number of worker processes
DGDN_WORKERS=4

# Request timeout (seconds)
DGDN_TIMEOUT=60

# Maximum request size (bytes)
DGDN_MAX_REQUEST_SIZE=104857600  # 100MB

# Enable request rate limiting
DGDN_RATE_LIMIT=100  # requests per minute

# Health check endpoint
DGDN_HEALTH_CHECK_PATH=/health

# -----------------------------------------------------------------------------
# Feature Flags
# -----------------------------------------------------------------------------

# Enable experimental features
DGDN_EXPERIMENTAL_FEATURES=false

# Enable new diffusion algorithm
DGDN_ENABLE_NEW_DIFFUSION=false

# Enable multi-scale temporal modeling
DGDN_ENABLE_MULTISCALE=false

# Enable continuous time dynamics
DGDN_ENABLE_CONTINUOUS_TIME=false

# -----------------------------------------------------------------------------
# Legacy Compatibility
# -----------------------------------------------------------------------------

# Enable legacy API compatibility
DGDN_LEGACY_API=false

# Legacy model path
DGDN_LEGACY_MODEL_PATH=./legacy_models

# =============================================================================
# Usage Instructions
# =============================================================================
#
# 1. Copy this file to .env in your project root
# 2. Uncomment and set the variables you need
# 3. Never commit .env file to version control
# 4. Use python-dotenv to load variables:
#    from dotenv import load_dotenv
#    load_dotenv()
#
# 5. Access variables in Python:
#    import os
#    data_dir = os.getenv('DGDN_DATA_DIR', './data')
#
# =============================================================================