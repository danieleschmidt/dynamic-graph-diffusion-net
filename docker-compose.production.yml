networks:
  default:
    driver: bridge
services:
  dgdn-api:
    build:
      context: .
      dockerfile: Dockerfile.production
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '0.5'
          memory: 1G
    environment:
    - DGDN_ENV=production
    - DGDN_LOG_LEVEL=INFO
    - DGDN_CACHE_SIZE=1024
    - DGDN_MAX_WORKERS=4
    healthcheck:
      interval: 30s
      retries: 3
      start_period: 40s
      test:
      - CMD
      - python
      - -c
      - import dgdn; print('Health check passed')
      timeout: 10s
    ports:
    - 8000:8000
    restart: unless-stopped
    volumes:
    - ./logs:/app/logs
    - ./data:/app/data
    - ./models:/app/models
  grafana:
    environment:
    - GF_SECURITY_ADMIN_PASSWORD=dgdn-admin-2025
    image: grafana/grafana:latest
    ports:
    - 3000:3000
    restart: unless-stopped
    volumes:
    - grafana-data:/var/lib/grafana
    - ./monitoring/grafana:/etc/grafana/provisioning
  nginx:
    depends_on:
    - dgdn-api
    image: nginx:alpine
    ports:
    - 80:80
    - 443:443
    restart: unless-stopped
    volumes:
    - ./nginx.conf:/etc/nginx/nginx.conf
    - ./ssl:/etc/nginx/ssl
  prometheus:
    command:
    - --config.file=/etc/prometheus/prometheus.yml
    - --storage.tsdb.path=/prometheus
    - --web.console.libraries=/etc/prometheus/console_libraries
    - --web.console.templates=/etc/prometheus/consoles
    - --web.enable-lifecycle
    image: prom/prometheus:latest
    ports:
    - 9090:9090
    restart: unless-stopped
    volumes:
    - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
  redis:
    command: redis-server --appendonly yes
    image: redis:7-alpine
    ports:
    - 6379:6379
    restart: unless-stopped
    volumes:
    - redis-data:/data
version: '3.8'
volumes:
  grafana-data: {}
  redis-data: {}
